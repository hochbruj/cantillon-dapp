[{"/Users/jan/defi/portfolio-builder/src/App.tsx":"1","/Users/jan/defi/portfolio-builder/src/index.tsx":"2","/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts":"3","/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx":"4","/Users/jan/defi/portfolio-builder/src/components/Footer.tsx":"5","/Users/jan/defi/portfolio-builder/src/components/Header.tsx":"6","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx":"7","/Users/jan/defi/portfolio-builder/src/config/routes.ts":"8","/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts":"9","/Users/jan/defi/portfolio-builder/src/views/Routes.tsx":"10","/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx":"11","/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts":"12","/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx":"13","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx":"14","/Users/jan/defi/portfolio-builder/src/store/store.tsx":"15","/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx":"16","/Users/jan/defi/portfolio-builder/src/config/ethData.ts":"17","/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx":"18","/Users/jan/defi/portfolio-builder/src/services/getPrices.ts":"19","/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts":"20","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts":"21","/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts":"22","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx":"23","/Users/jan/defi/portfolio-builder/src/config/apis.ts":"24","/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts":"25","/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts":"26","/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx":"27","/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx":"28","/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx":"29","/Users/jan/defi/portfolio-builder/src/components/Message.tsx":"30"},{"size":1458,"mtime":1616061866691,"results":"31","hashOfConfig":"32"},{"size":500,"mtime":1611439717839,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1611439717841,"results":"34","hashOfConfig":"32"},{"size":8079,"mtime":1616649649132,"results":"35","hashOfConfig":"32"},{"size":1204,"mtime":1615023103778,"results":"36","hashOfConfig":"32"},{"size":1876,"mtime":1616234547055,"results":"37","hashOfConfig":"32"},{"size":9007,"mtime":1616648487204,"results":"38","hashOfConfig":"32"},{"size":109,"mtime":1616626482249,"results":"39","hashOfConfig":"32"},{"size":279,"mtime":1615419755388,"results":"40","hashOfConfig":"32"},{"size":848,"mtime":1616641495491,"results":"41","hashOfConfig":"32"},{"size":3496,"mtime":1613601828684,"results":"42","hashOfConfig":"32"},{"size":1151,"mtime":1616061913493,"results":"43","hashOfConfig":"32"},{"size":953,"mtime":1614417211062,"results":"44","hashOfConfig":"32"},{"size":2562,"mtime":1616751475436,"results":"45","hashOfConfig":"32"},{"size":2207,"mtime":1616647841842,"results":"46","hashOfConfig":"32"},{"size":8876,"mtime":1616665254840,"results":"47","hashOfConfig":"32"},{"size":1658,"mtime":1616463606021,"results":"48","hashOfConfig":"32"},{"size":721,"mtime":1616751560594,"results":"49","hashOfConfig":"32"},{"size":825,"mtime":1616543584873,"results":"50","hashOfConfig":"32"},{"size":2300,"mtime":1616541152397,"results":"51","hashOfConfig":"32"},{"size":1625,"mtime":1616752730004,"results":"52","hashOfConfig":"32"},{"size":643,"mtime":1616461130702,"results":"53","hashOfConfig":"32"},{"size":3641,"mtime":1616234638854,"results":"54","hashOfConfig":"32"},{"size":246,"mtime":1616468189744,"results":"55","hashOfConfig":"32"},{"size":438,"mtime":1616491732164,"results":"56","hashOfConfig":"32"},{"size":740,"mtime":1616640842857,"results":"57","hashOfConfig":"32"},{"size":2158,"mtime":1616753433891,"results":"58","hashOfConfig":"32"},{"size":1725,"mtime":1616646380756,"results":"59","hashOfConfig":"32"},{"size":3186,"mtime":1616646334417,"results":"60","hashOfConfig":"32"},{"size":1104,"mtime":1616648806731,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1765l6l",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/jan/defi/portfolio-builder/src/App.tsx",[],["132","133"],"/Users/jan/defi/portfolio-builder/src/index.tsx",[],["134","135"],"/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts",[],["136","137"],"/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Footer.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Header.tsx",["138"],"import {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  PaletteType,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../config/routes\";\nimport ThemeButton from \"./ThemeButton\";\nimport { FC, useState } from \"react\";\nimport WalletConnectButton from \"./WalletConnectButton\";\nimport WalletButton from \"./WalletButton\";\nimport { useStore } from \"../store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    maxWidth: 60,\n    marginLeft: theme.spacing(2),\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n}));\n\ninterface HeaderProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst Header: FC<HeaderProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const { state } = useStore();\n  const { balances, connectedWeb3 } = state;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {location.pathname === ROUTES.PORTFOLIO && (\n          <IconButton\n            edge=\"start\"\n            className={classes.icon}\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => history.goBack()}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <Typography align=\"left\" variant=\"h4\" color=\"inherit\" noWrap>\n          Cantillon\n        </Typography>\n        <img alt=\"Logo\" className={classes.logo} src=\"/images/Logo.png\" />\n        <div className={classes.flexGrow} />\n        {connectedWeb3 && balances ? <WalletButton /> : <WalletConnectButton />}\n        <ThemeButton setTheme={setTheme} theme={theme} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx",["139"],"import { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Card,\n  CardMedia,\n  TableBody,\n  Link,\n  Button,\n} from \"@material-ui/core\";\nimport Calculator from \"../components/Calculator\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Portfolio, Weights } from \"../sharedTypes/portfolios\";\nimport { Token } from \"../sharedTypes/eth.types\";\nimport { useLocation } from \"react-router-dom\";\nimport { formatPercentage } from \"../utilities/formatters\";\nimport GetPortfolioModal from \"../components/GetPortfolioModal\";\n\nimport { tokens } from \"../config/ethData\";\nimport { Message, useStore } from \"../store/store\";\nimport WalletConnectButton from \"../components/WalletConnectButton\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  assetAllocation: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 0, 4),\n  },\n  overview: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  bold: {\n    fontWeight: 600,\n  },\n  tokenContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    height: 32,\n    width: 32,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\ninterface PortfolioDetailState {\n  portfolio: Portfolio;\n}\n\nconst PortfolioDetail = () => {\n  const classes = useStyles();\n  const location = useLocation<PortfolioDetailState>();\n  const { portfolio } = location.state;\n  const { state, dispatch } = useStore();\n  const { connectedWeb3, balances } = state;\n  const [modalOpen, setModalOpen] = useState(false);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const handeleGetPortfolio = () => {\n    if (balances?.ETH === \"0\") {\n      const message = {\n        type: \"error\",\n        text:\n          \"Youn need to fund your wallet with ETH before you can get this portfolio\",\n      } as Message;\n      dispatch({ type: \"updateMessage\", message });\n    } else {\n      setModalOpen(true);\n    }\n  };\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Grid container spacing={4} direction=\"row\" alignItems=\"center\">\n            <Grid container item xs={6}>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                {portfolio.name} Portfolio\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Card>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={`/images/Portfolio_${portfolio.id}.jpg`}\n                  title=\"Image title\"\n                />\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n      <Container className={classes.overview} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Typography\n          component=\"h2\"\n          variant=\"h4\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Portfolio overview\n        </Typography>\n        <Typography variant=\"body1\" color=\"textPrimary\" gutterBottom>\n          {portfolio.description}\n        </Typography>\n      </Container>\n      <div className={classes.assetAllocation}>\n        <Container maxWidth=\"md\">\n          {/* End hero unit */}\n          <Typography\n            component=\"h2\"\n            variant=\"h4\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Asset allocation\n          </Typography>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Token</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Asset class</TableCell>\n                <TableCell align=\"right\">Allocation</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(tokens).map((token: string) => (\n                <TableRow key={token}>\n                  <TableCell>\n                    <div className={classes.tokenContainer}>\n                      <img\n                        className={classes.avatar}\n                        src={`/tokens/${token}.png`}\n                      />\n                      <Typography variant=\"body1\">{token}</Typography>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    {\" \"}\n                    <Link href={tokens[token as Token].link} target=\"_blank\">\n                      {tokens[token as Token].name}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{tokens[token as Token].assetClass}</TableCell>\n                  <TableCell align=\"right\">\n                    {formatPercentage(\n                      portfolio.weights[token as keyof Weights]\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Container>\n      </div>\n      <Container className={classes.overview} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Typography\n          component=\"h2\"\n          variant=\"h4\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Performance\n        </Typography>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>1 Year</TableCell>\n              <TableCell>3 Years</TableCell>\n              <TableCell>5 Years</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>Total Return</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.totalReturn)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.totalReturn)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.totalReturn)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Annualized Return (APY)</TableCell>\n              <TableCell>{formatPercentage(portfolio.year1.apy)}</TableCell>\n              <TableCell>{formatPercentage(portfolio.year3.apy)}</TableCell>\n              <TableCell>{formatPercentage(portfolio.year5.apy)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Best 12 months</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.best12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.best12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.best12Months)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Worst 12 months</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.worst12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.worst12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.worst12Months)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Container>\n      <Calculator portfolio={portfolio} />\n      <Container className={classes.overview} maxWidth=\"md\">\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {connectedWeb3 && balances ? (\n            <>\n              <Grid item xs={12}>\n                <Button\n                  size=\"large\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={handeleGetPortfolio}\n                >\n                  Get this portfolio\n                </Button>\n              </Grid>\n              <GetPortfolioModal\n                open={modalOpen}\n                setModalOpen={setModalOpen}\n                portfolio={portfolio}\n              />\n            </>\n          ) : (\n            <>\n              <Grid item xs={12}>\n                <Typography>\n                  Please connect a wallet, if you want to get this portfolio{\" \"}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <WalletConnectButton />\n              </Grid>\n            </>\n          )}\n        </Grid>\n      </Container>\n    </main>\n  );\n};\n\nexport default PortfolioDetail;\n","/Users/jan/defi/portfolio-builder/src/config/routes.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts",[],["140","141"],"/Users/jan/defi/portfolio-builder/src/views/Routes.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx",[],"/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts",[],"/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx",["142","143"],"import React, { FC, useState } from \"react\";\nimport { IconButton, PaletteType, Tooltip } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\ninterface ThemeButtonProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst ThemeButton: FC<ThemeButtonProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n\n  const toggleTheme = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n  };\n\n  return (\n    <Tooltip title={`Switch to ${theme === \"dark\" ? \"light\" : \"dark\"} mode`}>\n      <IconButton color=\"inherit\" aria-label=\"back\" onClick={toggleTheme}>\n        {theme === \"dark\" ? <BrightnessHighIcon /> : <Brightness4Icon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ThemeButton;\n","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx",["144"],"/Users/jan/defi/portfolio-builder/src/store/store.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx",["145","146","147","148"],"/Users/jan/defi/portfolio-builder/src/config/ethData.ts",[],"/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx",["149"],"/Users/jan/defi/portfolio-builder/src/services/getPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts",["150"],"import { useEffect, useState } from \"react\";\nimport {\n  ChainId,\n  WETH,\n  Token as UniToken,\n  Trade,\n  TokenAmount,\n  Fetcher,\n  Route,\n  TradeType,\n  Percent,\n} from \"@uniswap/sdk\";\nimport { useStore } from \"../store/store\";\nimport { Token, TokenAmounts, UniswapAmounts } from \"../sharedTypes/eth.types\";\nimport { contractsAddressesMap, tokens } from \"../config/ethData\";\nimport { native } from \"../utilities/formatters\";\n\nexport const useUniswap = (tradeAmounts: TokenAmounts) => {\n  const { state } = useStore();\n  const { connectedWeb3 } = state;\n  const [uniswapAmounts, setUniswapAmounts] = useState<UniswapAmounts | null>();\n  const [updateUniswap, setUpdateUniswap] = useState(false);\n\n  useEffect(() => {\n    async function getUniswap() {\n      let amounts = {} as UniswapAmounts;\n      const chainId: ChainId = await connectedWeb3!.web3.eth.net.getId();\n      const { network } = connectedWeb3!;\n      const assets = Object.keys(tokens).filter(\n        (token) => token !== \"ETH\" && tradeAmounts[token as Token]\n      ) as [Token];\n\n      const tokenPromises = Promise.all(\n        assets.map((token) =>\n          Fetcher.fetchTokenData(\n            chainId,\n            contractsAddressesMap[network][native(token)]\n          )\n        )\n      );\n      const uniTokens: UniToken[] = await tokenPromises;\n\n      const pairPromises = Promise.all(\n        uniTokens.map((token) => Fetcher.fetchPairData(token, WETH[chainId]))\n      );\n      const pairs = await pairPromises;\n      const routes = pairs.map((pair) => new Route([pair], WETH[chainId]));\n\n      let i = 0;\n      for (const token of assets) {\n        const trade = new Trade(\n          routes[i],\n          new TokenAmount(WETH[chainId], tradeAmounts[token]),\n          TradeType.EXACT_INPUT\n        );\n\n        const slippageTolerance = new Percent(\"50\", \"10000\");\n        amounts[token] = {\n          executionPrice: trade.executionPrice.toSignificant(6),\n          amountOutMin: trade\n            .minimumAmountOut(slippageTolerance)\n            .toSignificant(6),\n          amountOutMinRaw: \"0\",\n        };\n\n        i++;\n      }\n      setUniswapAmounts(amounts);\n    }\n    if (updateUniswap) {\n      getUniswap();\n      setUpdateUniswap(false);\n    }\n  }, [updateUniswap]);\n  return { uniswapAmounts, setUpdateUniswap };\n};\n","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts",["151","152"],"/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts",["153"],"import { useEffect, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport { TokenAmounts } from \"../sharedTypes/eth.types\";\nimport { getPrices } from \"../services/getPrices\";\n\nexport const usePrices = () => {\n  const { dispatch } = useStore();\n  const [updatePrices, setUpdatePrices] = useState(false);\n\n  useEffect(() => {\n    async function updatePrices() {\n      let prices = {} as TokenAmounts;\n      prices = await getPrices();\n      dispatch({ type: \"updatePrices\", prices });\n    }\n    if (updatePrices) {\n      updatePrices();\n      setUpdatePrices(false);\n    }\n  }, [updatePrices]);\n  return setUpdatePrices;\n};\n","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx",[],"/Users/jan/defi/portfolio-builder/src/config/apis.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts",[],["154","155"],"/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx",["156","157","158","159","160"],"/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx",["161","162","163","164","165","166"],"/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx",["167","168","169","170","171","172","173","174"],"/Users/jan/defi/portfolio-builder/src/components/Message.tsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"175","replacedBy":"181"},{"ruleId":"177","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":13,"column":14,"nodeType":"185","messageId":"186","endLine":13,"endColumn":22},{"ruleId":"187","severity":1,"message":"188","line":169,"column":23,"nodeType":"189","endLine":172,"endColumn":25},{"ruleId":"175","replacedBy":"190"},{"ruleId":"177","replacedBy":"191"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":21,"nodeType":"185","messageId":"186","endLine":1,"endColumn":29},{"ruleId":"183","severity":1,"message":"192","line":15,"column":9,"nodeType":"185","messageId":"186","endLine":15,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":59,"column":9,"nodeType":"185","messageId":"186","endLine":59,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":14,"column":3,"nodeType":"185","messageId":"186","endLine":14,"endColumn":9},{"ruleId":"183","severity":1,"message":"195","line":28,"column":10,"nodeType":"185","messageId":"186","endLine":28,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":191,"column":6,"nodeType":"198","endLine":191,"endColumn":30,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"188","line":218,"column":25,"nodeType":"189","endLine":221,"endColumn":27},{"ruleId":"196","severity":1,"message":"200","line":14,"column":6,"nodeType":"198","endLine":14,"endColumn":8,"suggestions":"201"},{"ruleId":"196","severity":1,"message":"202","line":74,"column":6,"nodeType":"198","endLine":74,"endColumn":21,"suggestions":"203"},{"ruleId":"196","severity":1,"message":"204","line":48,"column":6,"nodeType":"198","endLine":48,"endColumn":21,"suggestions":"205"},{"ruleId":"196","severity":1,"message":"206","line":54,"column":6,"nodeType":"198","endLine":54,"endColumn":15,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":20,"column":6,"nodeType":"198","endLine":20,"endColumn":20,"suggestions":"209"},{"ruleId":"175","replacedBy":"210"},{"ruleId":"177","replacedBy":"211"},{"ruleId":"183","severity":1,"message":"212","line":1,"column":24,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"213","line":1,"column":35,"nodeType":"185","messageId":"186","endLine":1,"endColumn":41},{"ruleId":"183","severity":1,"message":"214","line":4,"column":20,"nodeType":"185","messageId":"186","endLine":4,"endColumn":33},{"ruleId":"183","severity":1,"message":"215","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":18},{"ruleId":"183","severity":1,"message":"216","line":44,"column":13,"nodeType":"185","messageId":"186","endLine":44,"endColumn":19},{"ruleId":"183","severity":1,"message":"184","line":1,"column":14,"nodeType":"185","messageId":"186","endLine":1,"endColumn":22},{"ruleId":"183","severity":1,"message":"212","line":1,"column":24,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"217","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":19},{"ruleId":"183","severity":1,"message":"218","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":26},{"ruleId":"183","severity":1,"message":"219","line":11,"column":10,"nodeType":"185","messageId":"186","endLine":11,"endColumn":14},{"ruleId":"183","severity":1,"message":"220","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"221","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":12},{"ruleId":"183","severity":1,"message":"222","line":6,"column":3,"nodeType":"185","messageId":"186","endLine":6,"endColumn":14},{"ruleId":"183","severity":1,"message":"194","line":9,"column":3,"nodeType":"185","messageId":"186","endLine":9,"endColumn":9},{"ruleId":"183","severity":1,"message":"223","line":17,"column":3,"nodeType":"185","messageId":"186","endLine":17,"endColumn":9},{"ruleId":"183","severity":1,"message":"224","line":44,"column":18,"nodeType":"185","messageId":"186","endLine":44,"endColumn":26},{"ruleId":"183","severity":1,"message":"225","line":45,"column":29,"nodeType":"185","messageId":"186","endLine":45,"endColumn":42},{"ruleId":"187","severity":1,"message":"188","line":74,"column":21,"nodeType":"189","endLine":77,"endColumn":23},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],["226"],["227"],["226"],["227"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["226"],["227"],"'classes' is assigned a value but never used.","'anchorRef' is assigned a value but never used.","'Button' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account', 'portfolioBalancer.methods', and 'txInput'. Either include them or remove the dependency array.","ArrayExpression",["228"],"React Hook useEffect has a missing dependency: 'setUpdatePrices'. Either include it or remove the dependency array.",["229"],"React Hook useEffect has missing dependencies: 'connectedWeb3' and 'tradeAmounts'. Either include them or remove the dependency array.",["230"],"React Hook useEffect has a missing dependency: 'getBalances'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has missing dependencies: 'connectedWeb3' and 'getBalances'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["233"],["226"],["227"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'ConnectedWeb3' is defined but never used.","'networks' is defined but never used.","'result' is assigned a value but never used.","'Portfolio' is defined but never used.","'formatPercentage' is defined but never used.","'Link' is defined but never used.","'ROUTES' is defined but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'dispatch' is assigned a value but never used.","'connectedWeb3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [uniswapAmounts, prices, txInput, portfolioBalancer.methods, account]",{"range":"246","text":"247"},"Update the dependencies array to be: [setUpdatePrices]",{"range":"248","text":"249"},"Update the dependencies array to be: [connectedWeb3, tradeAmounts, updateUniswap]",{"range":"250","text":"251"},"Update the dependencies array to be: [getBalances, updateBalance]",{"range":"252","text":"253"},"Update the dependencies array to be: [account, connectedWeb3, getBalances]",{"range":"254","text":"255"},"Update the dependencies array to be: [dispatch, updatePrices]",{"range":"256","text":"257"},[4970,4994],"[uniswapAmounts, prices, txInput, portfolioBalancer.methods, account]",[403,405],"[setUpdatePrices]",[2232,2247],"[connectedWeb3, tradeAmounts, updateUniswap]",[1486,1501],"[getBalances, updateBalance]",[1582,1591],"[account, connectedWeb3, getBalances]",[597,611],"[dispatch, updatePrices]"]