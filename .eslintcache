[{"/Users/jan/defi/portfolio-builder/src/App.tsx":"1","/Users/jan/defi/portfolio-builder/src/index.tsx":"2","/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts":"3","/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx":"4","/Users/jan/defi/portfolio-builder/src/components/Footer.tsx":"5","/Users/jan/defi/portfolio-builder/src/components/Header.tsx":"6","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx":"7","/Users/jan/defi/portfolio-builder/src/config/routes.ts":"8","/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts":"9","/Users/jan/defi/portfolio-builder/src/views/Routes.tsx":"10","/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx":"11","/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts":"12","/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx":"13","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx":"14","/Users/jan/defi/portfolio-builder/src/store/store.tsx":"15"},{"size":1683,"mtime":1615022993842,"results":"16","hashOfConfig":"17"},{"size":500,"mtime":1611439717839,"results":"18","hashOfConfig":"17"},{"size":425,"mtime":1611439717841,"results":"19","hashOfConfig":"17"},{"size":7760,"mtime":1615251361821,"results":"20","hashOfConfig":"17"},{"size":1204,"mtime":1615023103778,"results":"21","hashOfConfig":"17"},{"size":1654,"mtime":1615249501783,"results":"22","hashOfConfig":"17"},{"size":7113,"mtime":1613168786408,"results":"23","hashOfConfig":"17"},{"size":81,"mtime":1613103126558,"results":"24","hashOfConfig":"17"},{"size":302,"mtime":1613106439029,"results":"25","hashOfConfig":"17"},{"size":730,"mtime":1613103473748,"results":"26","hashOfConfig":"17"},{"size":3496,"mtime":1613601828684,"results":"27","hashOfConfig":"17"},{"size":564,"mtime":1615252816942,"results":"28","hashOfConfig":"17"},{"size":953,"mtime":1614417211062,"results":"29","hashOfConfig":"17"},{"size":5166,"mtime":1615277429239,"results":"30","hashOfConfig":"17"},{"size":1197,"mtime":1615277050078,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1765l6l",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jan/defi/portfolio-builder/src/App.tsx",[],"/Users/jan/defi/portfolio-builder/src/index.tsx",[],["66","67"],"/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts",[],"/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Footer.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Header.tsx",[],"/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx",["68"],"import { useEffect } from \"react\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Card,\n  CardMedia,\n  TableBody,\n  Link,\n} from \"@material-ui/core\";\nimport Calculator from \"../components/Calculator\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Portfolio, Weights } from \"../sharedTypes/portfolios\";\nimport { Token } from \"../sharedTypes/tokens\";\nimport { useLocation } from \"react-router-dom\";\nimport { formatPercentage } from \"../utilities/formatters\";\n\nconst tokens: [Token] = require(\"../config/tokens.json\");\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  assetAllocation: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(4, 0, 4),\n  },\n  overview: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  bold: {\n    fontWeight: 600,\n  },\n  tokenContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: theme.spacing(2),\n    height: 32,\n    width: 32,\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\ninterface PortfolioDetailState {\n  portfolio: Portfolio;\n}\n\nconst PortfolioDetail = () => {\n  const classes = useStyles();\n  const { state } = useLocation<PortfolioDetailState>();\n  const { portfolio } = state;\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  return (\n    <main>\n      {/* Hero unit */}\n      <div className={classes.heroContent}>\n        <Container maxWidth=\"md\">\n          <Grid container spacing={4} direction=\"row\" alignItems=\"center\">\n            <Grid container item xs={6}>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                {portfolio.name} Portfolio\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Card>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={`/images/Portfolio_${portfolio.id}.jpg`}\n                  title=\"Image title\"\n                />\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n      </div>\n      <Container className={classes.overview} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Typography\n          component=\"h2\"\n          variant=\"h4\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Portfolio overview\n        </Typography>\n        <Typography variant=\"body1\" color=\"textPrimary\" gutterBottom>\n          {portfolio.description}\n        </Typography>\n      </Container>\n      <div className={classes.assetAllocation}>\n        <Container maxWidth=\"md\">\n          {/* End hero unit */}\n          <Typography\n            component=\"h2\"\n            variant=\"h4\"\n            color=\"textPrimary\"\n            gutterBottom\n          >\n            Asset allocation\n          </Typography>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Token</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Asset class</TableCell>\n                <TableCell align=\"right\">Allocation</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {tokens.map((token) => (\n                <TableRow key={token.id}>\n                  <TableCell>\n                    <div className={classes.tokenContainer}>\n                      <img\n                        className={classes.avatar}\n                        src={`/tokens/${token.id}.png`}\n                      />\n                      <Typography variant=\"body1\">{token.id}</Typography>\n                    </div>\n                  </TableCell>\n                  <TableCell>\n                    {\" \"}\n                    <Link href={token.link} target=\"_blank\">\n                      {token.name}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{token.assetClass}</TableCell>\n                  <TableCell align=\"right\">\n                    {formatPercentage(\n                      portfolio.weights[token.id as keyof Weights]\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Container>\n      </div>\n      <Container className={classes.overview} maxWidth=\"md\">\n        {/* End hero unit */}\n        <Typography\n          component=\"h2\"\n          variant=\"h4\"\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          Performance\n        </Typography>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>1 Year</TableCell>\n              <TableCell>3 Years</TableCell>\n              <TableCell>5 Years</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell>Total Return</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.totalReturn)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.totalReturn)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.totalReturn)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Annualized Return (APY)</TableCell>\n              <TableCell>{formatPercentage(portfolio.year1.apy)}</TableCell>\n              <TableCell>{formatPercentage(portfolio.year3.apy)}</TableCell>\n              <TableCell>{formatPercentage(portfolio.year5.apy)}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Best 12 months</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.best12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.best12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.best12Months)}\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Worst 12 months</TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year1.worst12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year3.worst12Months)}\n              </TableCell>\n              <TableCell>\n                {formatPercentage(portfolio.year5.worst12Months)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </Container>\n      <Calculator portfolio={portfolio} />\n    </main>\n  );\n};\n\nexport default PortfolioDetail;\n","/Users/jan/defi/portfolio-builder/src/config/routes.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts",[],"/Users/jan/defi/portfolio-builder/src/views/Routes.tsx",[],["69","70"],"/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx",[],"/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts",[],"/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx",["71","72"],"import React, { FC, useState } from \"react\";\nimport { IconButton, PaletteType, Tooltip } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\ninterface ThemeButtonProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst ThemeButton: FC<ThemeButtonProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n\n  const toggleTheme = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n  };\n\n  return (\n    <Tooltip title={`Switch to ${theme === \"dark\" ? \"light\" : \"dark\"} mode`}>\n      <IconButton color=\"inherit\" aria-label=\"back\" onClick={toggleTheme}>\n        {theme === \"dark\" ? <BrightnessHighIcon /> : <Brightness4Icon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ThemeButton;\n","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx",[],"/Users/jan/defi/portfolio-builder/src/store/store.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":149,"column":23,"nodeType":"79","endLine":152,"endColumn":25},{"ruleId":"73","replacedBy":"80"},{"ruleId":"75","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":21,"nodeType":"84","messageId":"85","endLine":1,"endColumn":29},{"ruleId":"82","severity":1,"message":"86","line":15,"column":9,"nodeType":"84","messageId":"85","endLine":15,"endColumn":16},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["87"],["88"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]