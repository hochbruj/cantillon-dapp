[{"/Users/jan/defi/portfolio-builder/src/App.tsx":"1","/Users/jan/defi/portfolio-builder/src/index.tsx":"2","/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts":"3","/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx":"4","/Users/jan/defi/portfolio-builder/src/components/Footer.tsx":"5","/Users/jan/defi/portfolio-builder/src/components/Header.tsx":"6","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx":"7","/Users/jan/defi/portfolio-builder/src/config/routes.ts":"8","/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts":"9","/Users/jan/defi/portfolio-builder/src/views/Routes.tsx":"10","/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx":"11","/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts":"12","/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx":"13","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx":"14","/Users/jan/defi/portfolio-builder/src/store/store.tsx":"15","/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx":"16","/Users/jan/defi/portfolio-builder/src/config/ethData.ts":"17","/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx":"18","/Users/jan/defi/portfolio-builder/src/services/getPrices.ts":"19","/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts":"20","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts":"21","/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts":"22","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx":"23","/Users/jan/defi/portfolio-builder/src/config/apis.ts":"24","/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts":"25","/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts":"26","/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx":"27","/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx":"28","/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx":"29","/Users/jan/defi/portfolio-builder/src/components/Message.tsx":"30"},{"size":1520,"mtime":1616819816651,"results":"31","hashOfConfig":"32"},{"size":500,"mtime":1611439717839,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1611439717841,"results":"34","hashOfConfig":"32"},{"size":8019,"mtime":1616820376248,"results":"35","hashOfConfig":"32"},{"size":1204,"mtime":1615023103778,"results":"36","hashOfConfig":"32"},{"size":1876,"mtime":1616234547055,"results":"37","hashOfConfig":"32"},{"size":9107,"mtime":1617009881040,"results":"38","hashOfConfig":"32"},{"size":109,"mtime":1616626482249,"results":"39","hashOfConfig":"32"},{"size":279,"mtime":1615419755388,"results":"40","hashOfConfig":"32"},{"size":624,"mtime":1616819905764,"results":"41","hashOfConfig":"32"},{"size":3496,"mtime":1613601828684,"results":"42","hashOfConfig":"32"},{"size":1206,"mtime":1616921908223,"results":"43","hashOfConfig":"32"},{"size":953,"mtime":1614417211062,"results":"44","hashOfConfig":"32"},{"size":3039,"mtime":1617009230267,"results":"45","hashOfConfig":"32"},{"size":2487,"mtime":1616835269071,"results":"46","hashOfConfig":"32"},{"size":10465,"mtime":1616922059422,"results":"47","hashOfConfig":"32"},{"size":1658,"mtime":1616463606021,"results":"48","hashOfConfig":"32"},{"size":997,"mtime":1616834670070,"results":"49","hashOfConfig":"32"},{"size":825,"mtime":1616543584873,"results":"50","hashOfConfig":"32"},{"size":2300,"mtime":1616541152397,"results":"51","hashOfConfig":"32"},{"size":1616,"mtime":1617008978827,"results":"52","hashOfConfig":"32"},{"size":643,"mtime":1616461130702,"results":"53","hashOfConfig":"32"},{"size":3699,"mtime":1616835278439,"results":"54","hashOfConfig":"32"},{"size":246,"mtime":1616468189744,"results":"55","hashOfConfig":"32"},{"size":438,"mtime":1616491732164,"results":"56","hashOfConfig":"32"},{"size":740,"mtime":1616640842857,"results":"57","hashOfConfig":"32"},{"size":2226,"mtime":1616838408718,"results":"58","hashOfConfig":"32"},{"size":1818,"mtime":1616818941527,"results":"59","hashOfConfig":"32"},{"size":3186,"mtime":1616646334417,"results":"60","hashOfConfig":"32"},{"size":1104,"mtime":1616648806731,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1765l6l",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"/Users/jan/defi/portfolio-builder/src/App.tsx",["132","133","134","135"],"/Users/jan/defi/portfolio-builder/src/index.tsx",[],["136","137"],"/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts",[],["138","139"],"/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx",[],["140","141"],"/Users/jan/defi/portfolio-builder/src/components/Footer.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Header.tsx",["142"],"import {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  PaletteType,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../config/routes\";\nimport ThemeButton from \"./ThemeButton\";\nimport { FC, useState } from \"react\";\nimport WalletConnectButton from \"./WalletConnectButton\";\nimport WalletButton from \"./WalletButton\";\nimport { useStore } from \"../store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    maxWidth: 60,\n    marginLeft: theme.spacing(2),\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n}));\n\ninterface HeaderProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst Header: FC<HeaderProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const { state } = useStore();\n  const { balances, connectedWeb3 } = state;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {location.pathname === ROUTES.PORTFOLIO && (\n          <IconButton\n            edge=\"start\"\n            className={classes.icon}\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => history.goBack()}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <Typography align=\"left\" variant=\"h4\" color=\"inherit\" noWrap>\n          Cantillon\n        </Typography>\n        <img alt=\"Logo\" className={classes.logo} src=\"/images/Logo.png\" />\n        <div className={classes.flexGrow} />\n        {connectedWeb3 && balances ? <WalletButton /> : <WalletConnectButton />}\n        <ThemeButton setTheme={setTheme} theme={theme} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx",["143"],"/Users/jan/defi/portfolio-builder/src/config/routes.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts",[],"/Users/jan/defi/portfolio-builder/src/views/Routes.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx",[],["144","145"],"/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts",[],"/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx",["146","147"],"import React, { FC, useState } from \"react\";\nimport { IconButton, PaletteType, Tooltip } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\ninterface ThemeButtonProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst ThemeButton: FC<ThemeButtonProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n\n  const toggleTheme = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n  };\n\n  return (\n    <Tooltip title={`Switch to ${theme === \"dark\" ? \"light\" : \"dark\"} mode`}>\n      <IconButton color=\"inherit\" aria-label=\"back\" onClick={toggleTheme}>\n        {theme === \"dark\" ? <BrightnessHighIcon /> : <Brightness4Icon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ThemeButton;\n",["148","149"],"/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx",["150","151"],"/Users/jan/defi/portfolio-builder/src/store/store.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx",["152","153","154","155"],"/Users/jan/defi/portfolio-builder/src/config/ethData.ts",[],"/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx",["156","157"],"/Users/jan/defi/portfolio-builder/src/services/getPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts",["158"],"import { useEffect, useState } from \"react\";\nimport {\n  ChainId,\n  WETH,\n  Token as UniToken,\n  Trade,\n  TokenAmount,\n  Fetcher,\n  Route,\n  TradeType,\n  Percent,\n} from \"@uniswap/sdk\";\nimport { useStore } from \"../store/store\";\nimport { Token, TokenAmounts, UniswapAmounts } from \"../sharedTypes/eth.types\";\nimport { contractsAddressesMap, tokens } from \"../config/ethData\";\nimport { native } from \"../utilities/formatters\";\n\nexport const useUniswap = (tradeAmounts: TokenAmounts) => {\n  const { state } = useStore();\n  const { connectedWeb3 } = state;\n  const [uniswapAmounts, setUniswapAmounts] = useState<UniswapAmounts | null>();\n  const [updateUniswap, setUpdateUniswap] = useState(false);\n\n  useEffect(() => {\n    async function getUniswap() {\n      let amounts = {} as UniswapAmounts;\n      const chainId: ChainId = await connectedWeb3!.web3.eth.net.getId();\n      const { network } = connectedWeb3!;\n      const assets = Object.keys(tokens).filter(\n        (token) => token !== \"ETH\" && tradeAmounts[token as Token]\n      ) as [Token];\n\n      const tokenPromises = Promise.all(\n        assets.map((token) =>\n          Fetcher.fetchTokenData(\n            chainId,\n            contractsAddressesMap[network][native(token)]\n          )\n        )\n      );\n      const uniTokens: UniToken[] = await tokenPromises;\n\n      const pairPromises = Promise.all(\n        uniTokens.map((token) => Fetcher.fetchPairData(token, WETH[chainId]))\n      );\n      const pairs = await pairPromises;\n      const routes = pairs.map((pair) => new Route([pair], WETH[chainId]));\n\n      let i = 0;\n      for (const token of assets) {\n        const trade = new Trade(\n          routes[i],\n          new TokenAmount(WETH[chainId], tradeAmounts[token]),\n          TradeType.EXACT_INPUT\n        );\n\n        const slippageTolerance = new Percent(\"50\", \"10000\");\n        amounts[token] = {\n          executionPrice: trade.executionPrice.toSignificant(6),\n          amountOutMin: trade\n            .minimumAmountOut(slippageTolerance)\n            .toSignificant(6),\n          amountOutMinRaw: \"0\",\n        };\n\n        i++;\n      }\n      setUniswapAmounts(amounts);\n    }\n    if (updateUniswap) {\n      getUniswap();\n      setUpdateUniswap(false);\n    }\n  }, [updateUniswap]);\n  return { uniswapAmounts, setUpdateUniswap };\n};\n","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts",["159","160"],"/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts",["161"],"import { useEffect, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport { TokenAmounts } from \"../sharedTypes/eth.types\";\nimport { getPrices } from \"../services/getPrices\";\n\nexport const usePrices = () => {\n  const { dispatch } = useStore();\n  const [updatePrices, setUpdatePrices] = useState(false);\n\n  useEffect(() => {\n    async function updatePrices() {\n      let prices = {} as TokenAmounts;\n      prices = await getPrices();\n      dispatch({ type: \"updatePrices\", prices });\n    }\n    if (updatePrices) {\n      updatePrices();\n      setUpdatePrices(false);\n    }\n  }, [updatePrices]);\n  return setUpdatePrices;\n};\n","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx",[],"/Users/jan/defi/portfolio-builder/src/config/apis.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts",[],"/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx",["162","163","164","165"],"/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx",["166","167","168","169","170"],"import { FC, useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Container,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Portfolio } from \"../sharedTypes/portfolios\";\nimport { formatPercentage, formatToUsd } from \"../utilities/formatters\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { ROUTES } from \"../config/routes\";\nimport AssetTable from \"../components/AssetTable\";\nimport { useStore } from \"../store/store\";\nimport { totalUsdBalance } from \"../utilities/calculations\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  content: {\n    padding: theme.spacing(4, 0, 6),\n  },\n}));\n\nconst Dashboard: FC = () => {\n  const classes = useStyles();\n  const { state } = useStore();\n  const { balances, connectedWeb3, prices } = state;\n\n  if (!connectedWeb3) {\n    return <Redirect to={ROUTES.PORTFOLIOS} />;\n  }\n\n  return (\n    <main>\n      {balances && connectedWeb3 && prices ? (\n        <div className={classes.content}>\n          <Container maxWidth=\"md\">\n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <Typography\n                  component=\"h1\"\n                  variant=\"h4\"\n                  color=\"textPrimary\"\n                  gutterBottom\n                >\n                  {formatToUsd(totalUsdBalance(balances!, prices))}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <AssetTable />\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n      ) : (\n        <div className={classes.root}>\n          <CircularProgress />\n        </div>\n      )}\n    </main>\n  );\n};\nexport default Dashboard;\n","/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx",["171","172","173","174","175","176","177","178"],"/Users/jan/defi/portfolio-builder/src/components/Message.tsx",[],{"ruleId":"179","severity":1,"message":"180","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"183","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":23},{"ruleId":"179","severity":1,"message":"184","line":18,"column":10,"nodeType":"181","messageId":"182","endLine":18,"endColumn":20},{"ruleId":"179","severity":1,"message":"185","line":18,"column":22,"nodeType":"181","messageId":"182","endLine":18,"endColumn":35},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"190"},{"ruleId":"188","replacedBy":"191"},{"ruleId":"186","replacedBy":"192"},{"ruleId":"188","replacedBy":"193"},{"ruleId":"179","severity":1,"message":"194","line":13,"column":14,"nodeType":"181","messageId":"182","endLine":13,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":170,"column":23,"nodeType":"197","endLine":173,"endColumn":25},{"ruleId":"186","replacedBy":"198"},{"ruleId":"188","replacedBy":"199"},{"ruleId":"179","severity":1,"message":"194","line":1,"column":21,"nodeType":"181","messageId":"182","endLine":1,"endColumn":29},{"ruleId":"179","severity":1,"message":"200","line":15,"column":9,"nodeType":"181","messageId":"182","endLine":15,"endColumn":16},{"ruleId":"186","replacedBy":"201"},{"ruleId":"188","replacedBy":"202"},{"ruleId":"179","severity":1,"message":"203","line":1,"column":35,"nodeType":"181","messageId":"182","endLine":1,"endColumn":41},{"ruleId":"204","severity":1,"message":"205","line":85,"column":31,"nodeType":"206","messageId":"207","endLine":85,"endColumn":33},{"ruleId":"179","severity":1,"message":"208","line":14,"column":3,"nodeType":"181","messageId":"182","endLine":14,"endColumn":9},{"ruleId":"179","severity":1,"message":"209","line":28,"column":10,"nodeType":"181","messageId":"182","endLine":28,"endColumn":20},{"ruleId":"210","severity":1,"message":"211","line":199,"column":6,"nodeType":"212","endLine":199,"endColumn":30,"suggestions":"213"},{"ruleId":"195","severity":1,"message":"196","line":226,"column":25,"nodeType":"197","endLine":229,"endColumn":27},{"ruleId":"210","severity":1,"message":"214","line":20,"column":6,"nodeType":"212","endLine":20,"endColumn":8,"suggestions":"215"},{"ruleId":"210","severity":1,"message":"214","line":25,"column":6,"nodeType":"212","endLine":25,"endColumn":15,"suggestions":"216"},{"ruleId":"210","severity":1,"message":"217","line":74,"column":6,"nodeType":"212","endLine":74,"endColumn":21,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"219","line":47,"column":6,"nodeType":"212","endLine":47,"endColumn":21,"suggestions":"220"},{"ruleId":"210","severity":1,"message":"221","line":53,"column":6,"nodeType":"212","endLine":53,"endColumn":15,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"223","line":20,"column":6,"nodeType":"212","endLine":20,"endColumn":20,"suggestions":"224"},{"ruleId":"179","severity":1,"message":"180","line":1,"column":24,"nodeType":"181","messageId":"182","endLine":1,"endColumn":33},{"ruleId":"179","severity":1,"message":"203","line":1,"column":35,"nodeType":"181","messageId":"182","endLine":1,"endColumn":41},{"ruleId":"179","severity":1,"message":"225","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":18},{"ruleId":"179","severity":1,"message":"226","line":44,"column":13,"nodeType":"181","messageId":"182","endLine":44,"endColumn":19},{"ruleId":"179","severity":1,"message":"194","line":1,"column":14,"nodeType":"181","messageId":"182","endLine":1,"endColumn":22},{"ruleId":"179","severity":1,"message":"180","line":1,"column":24,"nodeType":"181","messageId":"182","endLine":1,"endColumn":33},{"ruleId":"179","severity":1,"message":"227","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":19},{"ruleId":"179","severity":1,"message":"228","line":10,"column":10,"nodeType":"181","messageId":"182","endLine":10,"endColumn":26},{"ruleId":"179","severity":1,"message":"209","line":11,"column":20,"nodeType":"181","messageId":"182","endLine":11,"endColumn":30},{"ruleId":"179","severity":1,"message":"194","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"229","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":12},{"ruleId":"179","severity":1,"message":"230","line":6,"column":3,"nodeType":"181","messageId":"182","endLine":6,"endColumn":14},{"ruleId":"179","severity":1,"message":"208","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":9},{"ruleId":"179","severity":1,"message":"231","line":17,"column":3,"nodeType":"181","messageId":"182","endLine":17,"endColumn":9},{"ruleId":"179","severity":1,"message":"232","line":44,"column":18,"nodeType":"181","messageId":"182","endLine":44,"endColumn":26},{"ruleId":"179","severity":1,"message":"233","line":45,"column":29,"nodeType":"181","messageId":"182","endLine":45,"endColumn":42},{"ruleId":"195","severity":1,"message":"196","line":74,"column":21,"nodeType":"197","endLine":77,"endColumn":23},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getPortfolios' is defined but never used.","'portfolios' is assigned a value but never used.","'setPortfolios' is assigned a value but never used.","no-native-reassign",["234"],"no-negated-in-lhs",["235"],["234"],["235"],["234"],["235"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["234"],["235"],"'classes' is assigned a value but never used.",["234"],["235"],"'useRef' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account', 'portfolioBalancer.methods', and 'txInput'. Either include them or remove the dependency array.","ArrayExpression",["236"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setUpdatePrices'. Either include them or remove the dependency array.",["237"],["238"],"React Hook useEffect has missing dependencies: 'connectedWeb3' and 'tradeAmounts'. Either include them or remove the dependency array.",["239"],"React Hook useEffect has a missing dependency: 'getBalances'. Either include it or remove the dependency array.",["240"],"React Hook useEffect has missing dependencies: 'getBalances', 'network', and 'web3'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["242"],"'networks' is defined but never used.","'result' is assigned a value but never used.","'Portfolio' is defined but never used.","'formatPercentage' is defined but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'dispatch' is assigned a value but never used.","'connectedWeb3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [uniswapAmounts, prices, txInput, portfolioBalancer.methods, account]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch, setUpdatePrices]",{"range":"259","text":"260"},"Update the dependencies array to be: [account, dispatch, setUpdatePrices]",{"range":"261","text":"262"},"Update the dependencies array to be: [connectedWeb3, tradeAmounts, updateUniswap]",{"range":"263","text":"264"},"Update the dependencies array to be: [getBalances, updateBalance]",{"range":"265","text":"266"},"Update the dependencies array to be: [account, getBalances, network, web3]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, updatePrices]",{"range":"269","text":"270"},[5134,5158],"[uniswapAmounts, prices, txInput, portfolioBalancer.methods, account]",[665,667],"[dispatch, setUpdatePrices]",[773,782],"[account, dispatch, setUpdatePrices]",[2232,2247],"[connectedWeb3, tradeAmounts, updateUniswap]",[1464,1479],"[getBalances, updateBalance]",[1573,1582],"[account, getBalances, network, web3]",[597,611],"[dispatch, updatePrices]"]