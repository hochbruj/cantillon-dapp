[{"/Users/jan/defi/portfolio-builder/src/App.tsx":"1","/Users/jan/defi/portfolio-builder/src/index.tsx":"2","/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts":"3","/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx":"4","/Users/jan/defi/portfolio-builder/src/components/Footer.tsx":"5","/Users/jan/defi/portfolio-builder/src/components/Header.tsx":"6","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx":"7","/Users/jan/defi/portfolio-builder/src/config/routes.ts":"8","/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts":"9","/Users/jan/defi/portfolio-builder/src/views/Routes.tsx":"10","/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx":"11","/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts":"12","/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx":"13","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx":"14","/Users/jan/defi/portfolio-builder/src/store/store.tsx":"15","/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx":"16","/Users/jan/defi/portfolio-builder/src/config/ethData.ts":"17","/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx":"18","/Users/jan/defi/portfolio-builder/src/services/getPrices.ts":"19","/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts":"20","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts":"21","/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts":"22","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx":"23","/Users/jan/defi/portfolio-builder/src/config/apis.ts":"24","/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts":"25","/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts":"26","/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx":"27","/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx":"28","/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx":"29","/Users/jan/defi/portfolio-builder/src/components/Message.tsx":"30"},{"size":1458,"mtime":1616061866691,"results":"31","hashOfConfig":"32"},{"size":500,"mtime":1611439717839,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":1611439717841,"results":"34","hashOfConfig":"32"},{"size":7760,"mtime":1616626812426,"results":"35","hashOfConfig":"32"},{"size":1204,"mtime":1615023103778,"results":"36","hashOfConfig":"32"},{"size":1876,"mtime":1616234547055,"results":"37","hashOfConfig":"32"},{"size":9007,"mtime":1616648487204,"results":"38","hashOfConfig":"32"},{"size":109,"mtime":1616626482249,"results":"39","hashOfConfig":"32"},{"size":279,"mtime":1615419755388,"results":"40","hashOfConfig":"32"},{"size":848,"mtime":1616641495491,"results":"41","hashOfConfig":"32"},{"size":3496,"mtime":1613601828684,"results":"42","hashOfConfig":"32"},{"size":1151,"mtime":1616061913493,"results":"43","hashOfConfig":"32"},{"size":953,"mtime":1614417211062,"results":"44","hashOfConfig":"32"},{"size":2636,"mtime":1616550918598,"results":"45","hashOfConfig":"32"},{"size":2207,"mtime":1616647841842,"results":"46","hashOfConfig":"32"},{"size":8788,"mtime":1616551667531,"results":"47","hashOfConfig":"32"},{"size":1658,"mtime":1616463606021,"results":"48","hashOfConfig":"32"},{"size":721,"mtime":1616457527061,"results":"49","hashOfConfig":"32"},{"size":825,"mtime":1616543584873,"results":"50","hashOfConfig":"32"},{"size":2300,"mtime":1616541152397,"results":"51","hashOfConfig":"32"},{"size":1402,"mtime":1616112281159,"results":"52","hashOfConfig":"32"},{"size":643,"mtime":1616461130702,"results":"53","hashOfConfig":"32"},{"size":3641,"mtime":1616234638854,"results":"54","hashOfConfig":"32"},{"size":246,"mtime":1616468189744,"results":"55","hashOfConfig":"32"},{"size":438,"mtime":1616491732164,"results":"56","hashOfConfig":"32"},{"size":740,"mtime":1616640842857,"results":"57","hashOfConfig":"32"},{"size":1876,"mtime":1616552106344,"results":"58","hashOfConfig":"32"},{"size":1725,"mtime":1616646380756,"results":"59","hashOfConfig":"32"},{"size":3186,"mtime":1616646334417,"results":"60","hashOfConfig":"32"},{"size":1104,"mtime":1616648806731,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1765l6l",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"67"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"67"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"67"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"67"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jan/defi/portfolio-builder/src/App.tsx",[],["133","134"],"/Users/jan/defi/portfolio-builder/src/index.tsx",[],["135","136"],"/Users/jan/defi/portfolio-builder/src/reportWebVitals.ts",[],["137","138"],"/Users/jan/defi/portfolio-builder/src/views/Portfolios.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Footer.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Header.tsx",["139"],"import {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  PaletteType,\n} from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../config/routes\";\nimport ThemeButton from \"./ThemeButton\";\nimport { FC, useState } from \"react\";\nimport WalletConnectButton from \"./WalletConnectButton\";\nimport WalletButton from \"./WalletButton\";\nimport { useStore } from \"../store/store\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    maxWidth: 60,\n    marginLeft: theme.spacing(2),\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n}));\n\ninterface HeaderProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst Header: FC<HeaderProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n  const { state } = useStore();\n  const { balances, connectedWeb3 } = state;\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        {location.pathname === ROUTES.PORTFOLIO && (\n          <IconButton\n            edge=\"start\"\n            className={classes.icon}\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={() => history.goBack()}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n        )}\n        <Typography align=\"left\" variant=\"h4\" color=\"inherit\" noWrap>\n          Cantillon\n        </Typography>\n        <img alt=\"Logo\" className={classes.logo} src=\"/images/Logo.png\" />\n        <div className={classes.flexGrow} />\n        {connectedWeb3 && balances ? <WalletButton /> : <WalletConnectButton />}\n        <ThemeButton setTheme={setTheme} theme={theme} />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","/Users/jan/defi/portfolio-builder/src/views/PortfolioDetail.tsx",["140"],"/Users/jan/defi/portfolio-builder/src/config/routes.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getPortfolios.ts",[],["141","142"],"/Users/jan/defi/portfolio-builder/src/views/Routes.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/Calculator.tsx",[],"/Users/jan/defi/portfolio-builder/src/utilities/formatters.ts",[],"/Users/jan/defi/portfolio-builder/src/components/ThemeButton.tsx",["143","144"],"import React, { FC, useState } from \"react\";\nimport { IconButton, PaletteType, Tooltip } from \"@material-ui/core\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport BrightnessHighIcon from \"@material-ui/icons/BrightnessHigh\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({}));\n\ninterface ThemeButtonProps {\n  setTheme: (theme: PaletteType) => void;\n  theme: PaletteType;\n}\n\nconst ThemeButton: FC<ThemeButtonProps> = ({ setTheme, theme }) => {\n  const classes = useStyles();\n\n  const toggleTheme = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n  };\n\n  return (\n    <Tooltip title={`Switch to ${theme === \"dark\" ? \"light\" : \"dark\"} mode`}>\n      <IconButton color=\"inherit\" aria-label=\"back\" onClick={toggleTheme}>\n        {theme === \"dark\" ? <BrightnessHighIcon /> : <Brightness4Icon />}\n      </IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ThemeButton;\n","/Users/jan/defi/portfolio-builder/src/components/WalletConnectButton.tsx",["145","146"],"import { FC, useState, useEffect, useRef } from \"react\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport Web3Modal from \"web3modal\";\nimport Web3 from \"web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport Fortmatic from \"fortmatic\";\nimport Portis from \"@portis/web3\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useStore, ConnectedWeb3 } from \"../store/store\";\nimport { networks } from \"../config/ethData\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\",\n  },\n  buttonProgress: {\n    color: \"#81c784\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12,\n  },\n}));\n\nconst providerOptions = {\n  walletconnect: {\n    package: WalletConnectProvider,\n    options: {\n      infuraId: process.env.REACT_APP_INFURA_ID,\n    },\n  },\n  fortmatic: {\n    package: Fortmatic,\n    options: {\n      key: process.env.REACT_APP_FORTMATIC_ID,\n    },\n  },\n  portis: {\n    package: Portis,\n    options: {\n      id: process.env.REACT_APP_PORTIS_ID,\n    },\n  },\n};\n\nconst web3ModalOptions = {\n  cacheProvider: false,\n  providerOptions,\n};\n\nconst web3ModalInstance = new Web3Modal(web3ModalOptions);\n\nconst WalletConnectButton: FC = () => {\n  const classes = useStyles();\n  const { state, dispatch } = useStore();\n  const { balances } = state;\n  const [open, setOpen] = useState<boolean>(false);\n  const anchorRef = useRef<HTMLAnchorElement>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (balances) {\n      setLoading(false);\n    }\n  }, [balances]);\n\n  const connetWallet = async () => {\n    setLoading(true);\n    try {\n      const provider = await web3ModalInstance.connect();\n      const web3 = new Web3(provider);\n      const accounts = await web3.eth.getAccounts();\n      const account = accounts[0];\n      const networkId = await web3.eth.net.getId();\n      const wallet = \"Metamask\";\n      const connectedWeb3: ConnectedWeb3 = {\n        web3,\n        account,\n        network: networks[networkId],\n        wallet,\n      };\n      dispatch({ type: \"connectWeb3\", connectedWeb3 });\n      setOpen(false);\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={connetWallet}\n        disabled={loading}\n      >\n        Connect Wallet\n      </Button>\n      {loading && (\n        <CircularProgress size={24} className={classes.buttonProgress} />\n      )}\n    </div>\n  );\n};\n\nexport default WalletConnectButton;\n","/Users/jan/defi/portfolio-builder/src/store/store.tsx",[],"/Users/jan/defi/portfolio-builder/src/components/GetPortfolioModal.tsx",["147"],"/Users/jan/defi/portfolio-builder/src/config/ethData.ts",[],"/Users/jan/defi/portfolio-builder/src/components/Web3Data.tsx",["148"],"import { FC, useEffect } from \"react\";\nimport { useBalances } from \"../hooks/useBalances\";\nimport { useStore } from \"../store/store\";\nimport { usePrices } from \"../hooks/usePrices\";\n\nconst Web3Data: FC = () => {\n  const { state, dispatch } = useStore();\n  const { connectedWeb3 } = state;\n  const setUpdatePrices = usePrices();\n\n  //initial rendering\n  useEffect(() => {\n    setUpdatePrices(true);\n  }, []);\n\n  window.ethereum.on(\"accountsChanged\", function (accounts: any) {\n    if (connectedWeb3 && connectedWeb3.account !== accounts[0]) {\n      dispatch({ type: \"updateAccount\", account: accounts[0] });\n    }\n  });\n\n  useBalances();\n\n  console.log(\"state\", state);\n\n  return <div></div>;\n};\n\nexport default Web3Data;\n","/Users/jan/defi/portfolio-builder/src/services/getPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/hooks/useUniswap.ts",["149"],"import { useEffect, useState } from \"react\";\nimport {\n  ChainId,\n  WETH,\n  Token as UniToken,\n  Trade,\n  TokenAmount,\n  Fetcher,\n  Route,\n  TradeType,\n  Percent,\n} from \"@uniswap/sdk\";\nimport { useStore } from \"../store/store\";\nimport { Token, TokenAmounts, UniswapAmounts } from \"../sharedTypes/eth.types\";\nimport { contractsAddressesMap, tokens } from \"../config/ethData\";\nimport { native } from \"../utilities/formatters\";\n\nexport const useUniswap = (tradeAmounts: TokenAmounts) => {\n  const { state } = useStore();\n  const { connectedWeb3 } = state;\n  const [uniswapAmounts, setUniswapAmounts] = useState<UniswapAmounts | null>();\n  const [updateUniswap, setUpdateUniswap] = useState(false);\n\n  useEffect(() => {\n    async function getUniswap() {\n      let amounts = {} as UniswapAmounts;\n      const chainId: ChainId = await connectedWeb3!.web3.eth.net.getId();\n      const { network } = connectedWeb3!;\n      const assets = Object.keys(tokens).filter(\n        (token) => token !== \"ETH\" && tradeAmounts[token as Token]\n      ) as [Token];\n\n      const tokenPromises = Promise.all(\n        assets.map((token) =>\n          Fetcher.fetchTokenData(\n            chainId,\n            contractsAddressesMap[network][native(token)]\n          )\n        )\n      );\n      const uniTokens: UniToken[] = await tokenPromises;\n\n      const pairPromises = Promise.all(\n        uniTokens.map((token) => Fetcher.fetchPairData(token, WETH[chainId]))\n      );\n      const pairs = await pairPromises;\n      const routes = pairs.map((pair) => new Route([pair], WETH[chainId]));\n\n      let i = 0;\n      for (const token of assets) {\n        const trade = new Trade(\n          routes[i],\n          new TokenAmount(WETH[chainId], tradeAmounts[token]),\n          TradeType.EXACT_INPUT\n        );\n\n        const slippageTolerance = new Percent(\"50\", \"10000\");\n        amounts[token] = {\n          executionPrice: trade.executionPrice.toSignificant(6),\n          amountOutMin: trade\n            .minimumAmountOut(slippageTolerance)\n            .toSignificant(6),\n          amountOutMinRaw: \"0\",\n        };\n\n        i++;\n      }\n      setUniswapAmounts(amounts);\n    }\n    if (updateUniswap) {\n      getUniswap();\n      setUpdateUniswap(false);\n    }\n  }, [updateUniswap]);\n  return { uniswapAmounts, setUpdateUniswap };\n};\n","/Users/jan/defi/portfolio-builder/src/hooks/useBalances.ts",["150"],"import { useEffect } from \"react\";\nimport { useStore } from \"../store/store\";\nimport { tokens, contractsAddressesMap } from \"../config/ethData\";\nimport { TokenAmounts, Token } from \"../sharedTypes/eth.types\";\nimport ERC20 from \"../contracts/ERC20.json\";\n\nexport const useBalances = () => {\n  const { state, dispatch } = useStore();\n  const { connectedWeb3 } = state;\n  const account = connectedWeb3 && connectedWeb3.account;\n\n  useEffect(() => {\n    async function getBalances() {\n      const { web3, network } = connectedWeb3!;\n      const erc20TokenList = Object.keys(tokens).filter(\n        (token) => token !== \"ETH\"\n      ) as [Token];\n      const erc20Contracts = erc20TokenList.map(\n        (token) =>\n          new web3.eth.Contract(\n            ERC20.abi as any,\n            contractsAddressesMap[network][token]\n          )\n      );\n      const balancPromises = Promise.all(\n        erc20Contracts.map((contract) =>\n          contract.methods.balanceOf(account).call()\n        )\n      );\n      const balanceResults = await balancPromises;\n      let balances = {} as TokenAmounts;\n\n      let i = 0;\n      for (const token of erc20TokenList) {\n        balances[token] = balanceResults[i];\n        i++;\n      }\n      balances.ETH = await web3.eth.getBalance(account!);\n      dispatch({ type: \"updateBalances\", balances });\n    }\n    if (account) {\n      getBalances();\n    }\n  }, [account]);\n};\n","/Users/jan/defi/portfolio-builder/src/hooks/usePrices.ts",["151"],"import { useEffect, useState } from \"react\";\nimport { useStore } from \"../store/store\";\nimport { TokenAmounts } from \"../sharedTypes/eth.types\";\nimport { getPrices } from \"../services/getPrices\";\n\nexport const usePrices = () => {\n  const { dispatch } = useStore();\n  const [updatePrices, setUpdatePrices] = useState(false);\n\n  useEffect(() => {\n    async function updatePrices() {\n      let prices = {} as TokenAmounts;\n      prices = await getPrices();\n      dispatch({ type: \"updatePrices\", prices });\n    }\n    if (updatePrices) {\n      updatePrices();\n      setUpdatePrices(false);\n    }\n  }, [updatePrices]);\n  return setUpdatePrices;\n};\n","/Users/jan/defi/portfolio-builder/src/components/WalletButton.tsx",[],"/Users/jan/defi/portfolio-builder/src/config/apis.ts",[],"/Users/jan/defi/portfolio-builder/src/services/getGasPrices.ts",[],"/Users/jan/defi/portfolio-builder/src/utilities/calculations.ts",[],"/Users/jan/defi/portfolio-builder/src/components/PurchaseButton.tsx",["152","153","154","155","156","157","158","159","160","161","162","163","164"],"/Users/jan/defi/portfolio-builder/src/views/Dashboard.tsx",["165","166","167","168","169","170"],"/Users/jan/defi/portfolio-builder/src/components/AssetTable.tsx",["171","172","173","174","175","176","177","178"],"/Users/jan/defi/portfolio-builder/src/components/Message.tsx",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"179","replacedBy":"185"},{"ruleId":"181","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":13,"column":14,"nodeType":"189","messageId":"190","endLine":13,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":169,"column":23,"nodeType":"193","endLine":172,"endColumn":25},{"ruleId":"179","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":21,"nodeType":"189","messageId":"190","endLine":1,"endColumn":29},{"ruleId":"187","severity":1,"message":"196","line":15,"column":9,"nodeType":"189","messageId":"190","endLine":15,"endColumn":16},{"ruleId":"187","severity":1,"message":"197","line":59,"column":10,"nodeType":"189","messageId":"190","endLine":59,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":60,"column":9,"nodeType":"189","messageId":"190","endLine":60,"endColumn":18},{"ruleId":null,"fatal":true,"severity":2,"message":"199","line":284,"column":89},{"ruleId":"200","severity":1,"message":"201","line":14,"column":6,"nodeType":"202","endLine":14,"endColumn":8,"suggestions":"203"},{"ruleId":"200","severity":1,"message":"204","line":74,"column":6,"nodeType":"202","endLine":74,"endColumn":21,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"206","line":44,"column":6,"nodeType":"202","endLine":44,"endColumn":15,"suggestions":"207"},{"ruleId":"200","severity":1,"message":"208","line":20,"column":6,"nodeType":"202","endLine":20,"endColumn":20,"suggestions":"209"},{"ruleId":"187","severity":1,"message":"210","line":1,"column":24,"nodeType":"189","messageId":"190","endLine":1,"endColumn":33},{"ruleId":"187","severity":1,"message":"211","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"212","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":12},{"ruleId":"187","severity":1,"message":"213","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":29},{"ruleId":"187","severity":1,"message":"214","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":17},{"ruleId":"187","severity":1,"message":"215","line":7,"column":8,"nodeType":"189","messageId":"190","endLine":7,"endColumn":14},{"ruleId":"187","severity":1,"message":"216","line":9,"column":20,"nodeType":"189","messageId":"190","endLine":9,"endColumn":33},{"ruleId":"187","severity":1,"message":"217","line":10,"column":10,"nodeType":"189","messageId":"190","endLine":10,"endColumn":18},{"ruleId":"187","severity":1,"message":"218","line":37,"column":18,"nodeType":"189","messageId":"190","endLine":37,"endColumn":26},{"ruleId":"187","severity":1,"message":"197","line":39,"column":10,"nodeType":"189","messageId":"190","endLine":39,"endColumn":14},{"ruleId":"187","severity":1,"message":"219","line":39,"column":16,"nodeType":"189","messageId":"190","endLine":39,"endColumn":23},{"ruleId":"187","severity":1,"message":"198","line":40,"column":9,"nodeType":"189","messageId":"190","endLine":40,"endColumn":18},{"ruleId":"187","severity":1,"message":"220","line":46,"column":13,"nodeType":"189","messageId":"190","endLine":46,"endColumn":19},{"ruleId":"187","severity":1,"message":"188","line":1,"column":14,"nodeType":"189","messageId":"190","endLine":1,"endColumn":22},{"ruleId":"187","severity":1,"message":"210","line":1,"column":24,"nodeType":"189","messageId":"190","endLine":1,"endColumn":33},{"ruleId":"187","severity":1,"message":"221","line":9,"column":10,"nodeType":"189","messageId":"190","endLine":9,"endColumn":19},{"ruleId":"187","severity":1,"message":"222","line":10,"column":10,"nodeType":"189","messageId":"190","endLine":10,"endColumn":26},{"ruleId":"187","severity":1,"message":"223","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":14},{"ruleId":"187","severity":1,"message":"224","line":12,"column":10,"nodeType":"189","messageId":"190","endLine":12,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":25},{"ruleId":"187","severity":1,"message":"225","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":12},{"ruleId":"187","severity":1,"message":"226","line":6,"column":3,"nodeType":"189","messageId":"190","endLine":6,"endColumn":14},{"ruleId":"187","severity":1,"message":"227","line":9,"column":3,"nodeType":"189","messageId":"190","endLine":9,"endColumn":9},{"ruleId":"187","severity":1,"message":"228","line":17,"column":3,"nodeType":"189","messageId":"190","endLine":17,"endColumn":9},{"ruleId":"187","severity":1,"message":"218","line":44,"column":18,"nodeType":"189","messageId":"190","endLine":44,"endColumn":26},{"ruleId":"187","severity":1,"message":"229","line":45,"column":29,"nodeType":"189","messageId":"190","endLine":45,"endColumn":42},{"ruleId":"191","severity":1,"message":"192","line":74,"column":21,"nodeType":"193","endLine":77,"endColumn":23},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],["230"],["231"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["230"],["231"],"'classes' is assigned a value but never used.","'open' is assigned a value but never used.","'anchorRef' is assigned a value but never used.","Parsing error: Identifier expected.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setUpdatePrices'. Either include it or remove the dependency array.","ArrayExpression",["232"],"React Hook useEffect has missing dependencies: 'connectedWeb3' and 'tradeAmounts'. Either include them or remove the dependency array.",["233"],"React Hook useEffect has missing dependencies: 'connectedWeb3' and 'dispatch'. Either include them or remove the dependency array.",["234"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["235"],"'useEffect' is defined but never used.","'Web3Modal' is defined but never used.","'Web3' is defined but never used.","'WalletConnectProvider' is defined but never used.","'Fortmatic' is defined but never used.","'Portis' is defined but never used.","'ConnectedWeb3' is defined but never used.","'networks' is defined but never used.","'dispatch' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'result' is assigned a value but never used.","'Portfolio' is defined but never used.","'formatPercentage' is defined but never used.","'Link' is defined but never used.","'ROUTES' is defined but never used.","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'Avatar' is defined but never used.","'connectedWeb3' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [setUpdatePrices]",{"range":"244","text":"245"},"Update the dependencies array to be: [connectedWeb3, tradeAmounts, updateUniswap]",{"range":"246","text":"247"},"Update the dependencies array to be: [account, connectedWeb3, dispatch]",{"range":"248","text":"249"},"Update the dependencies array to be: [dispatch, updatePrices]",{"range":"250","text":"251"},[403,405],"[setUpdatePrices]",[2232,2247],"[connectedWeb3, tradeAmounts, updateUniswap]",[1387,1396],"[account, connectedWeb3, dispatch]",[597,611],"[dispatch, updatePrices]"]